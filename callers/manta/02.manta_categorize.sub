#!/bin/bash

#PBS -N manta_categorize_sampleReplace
#PBS -l nodes=1:ppn=1
#PBS -l mem=4gb
#PBS -q analysis
#PBS -d /users/hl7/analysis/SV/sample/sampleReplace
#PBS -e /users/hl7/analysis/SV/sample/sampleReplace/log/manta/manta_categorize.err
#PBS -o /users/hl7/analysis/SV/sample/sampleReplace/log/manta/manta_categorize.out
#PBS -A proj-as0001

tool=manta
sample=sampleReplace
rootDir=/users/hl7/analysis/SV
workingDir=$rootDir/sample/$sample/callers/$tool
outputDir=$workingDir/categorize
input=$workingDir/$tool.vcf
helperDir=$rootDir/scripts/helpers
addMateInfo=$helperDir/addMateInfoForBND.py
progressFile=$rootDir/sample/$sample/log/progress.txt

mkdir -p $outputDir
cd $outputDir

# check input
if [[ ! -s $input ]]; then
    echo "File $input does not exist, exit"
    exit 1
fi

##########################################################

ho=$(hostname)
start=$(date)
startTime=$(date -u +"%s")
echo "Running: ${tool}_categorize.......... on $ho, from $start" >> $progressFile

############################################################

## categorize by SV type
for ty in DUP DEL INV INS BND; do
    type="\"$ty\""
    if [[ $ty == "BND" ]]; then
        ty=CTX
    fi
    bcftools view -i "INFO/SVTYPE==$type" $input > $outputDir/$tool.$ty.vcf
    if [[ $ty == "CTX" ]]; then
        $addMateInfo $outputDir/$tool.$ty.vcf | sed "s/SVTYPE==BND/SVTYPE==$ty/" \
        | awk -v FS="\t" -v OFS="\t" '{if ($1~/^#/) {print $0} else {split($8,info,";"); split(info[1],mateChr,"="); chr=mateChr[2]; if ($1>chr) {print $0}}}' \
        > $outputDir/$tool.$ty.vcf.2
        mv $outputDir/$tool.$ty.vcf.2 $outputDir/$tool.$ty.vcf
    fi
done

## simple and further filter
source activate python2
for ty in DUP DEL INV INS CTX; do
    bcftools view -f PASS -i 'FMT/FT="PASS"' $outputDir/$tool.$ty.vcf \
    > $outputDir/$tool.$ty.simpleFilter.vcf
    if [[ $ty == "CTX" ]]; then
        bcftools query -f '%CHROM\t%POS\t%INFO/MATE_CHR\t%INFO/MATE_END\n' $outputDir/$tool.$ty.simpleFilter.vcf \
        | awk -v OFS="\t" '{print $1,$2-1,$2,$3,$4-1,$4}' \
        | pgltools formatbedpe \
        | pgltools intersect1D -stdInA -b $excludeRegion -v \
        | sort -k1V,1V -k2n,2n -k3n,3n -k4V,4V -k5n,5n -k6n,6n \
        > $outputDir/$tool.$ty.furtherFilter.pgl
    else
        bcftools query -f '%CHROM\t%POS\t%INFO/END\n' $outputDir/$tool.$ty.simpleFilter.vcf \
        | bedtools intersect -a stdin -b $excludeRegion -v \
        | sort -k1V,1V -k2n,2n -k3n,3n \
        > $outputDir/$tool.$ty.furtherFilter.bed
    fi
done

#############################################################

finish=$(date)
finishTime=$(date -u +"%s")
diff=$(($finishTime-$startTime))
hour=$(($diff/3600))
diffInWord=`echo "$hour hours $((($diff-$hour*3600)/60)) minutes and $((($diff-$hour*3600)%60)) seconds elapsed"`
echo "Done: ${tool}_categorize, $diffInWord" >> $progressFile



