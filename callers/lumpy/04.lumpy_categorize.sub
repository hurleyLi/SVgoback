#!/bin/bash

#PBS -N lumpy_categorize_sampleReplace
#PBS -l nodes=1:ppn=1
#PBS -l mem=4gb
#PBS -q analysis
#PBS -d /users/hl7/analysis/SV/sample/sampleReplace
#PBS -e /users/hl7/analysis/SV/sample/sampleReplace/log/lumpy/lumpy_categorize.err
#PBS -o /users/hl7/analysis/SV/sample/sampleReplace/log/lumpy/lumpy_categorize.out
#PBS -A proj-as0001

tool=lumpy
sample=sampleReplace
rootDir=/users/hl7/analysis/SV
workingDir=$rootDir/sample/$sample/callers/$tool
outputDir=$workingDir/categorize
input=$workingDir/$tool.svtyper.vcf
helperDir=$rootDir/scripts/helpers
addMateInfo=$helperDir/addMateInfoForBND.py
excludeRegion=$helperDir/RLCRs_no_Repeat_Masker.txt
progressFile=$rootDir/sample/$sample/log/progress.txt

mkdir -p $outputDir
cd $outputDir

# check input
if [[ ! -s $input ]]; then
    echo "File $input does not exist, exit"
    exit 1
fi

##########################################################

ho=$(hostname)
start=$(date)
startTime=$(date -u +"%s")
echo "Running: ${tool}_categorize.......... on $ho, from $start" >> $progressFile

############################################################

## categorize by SV type
for ty in DEL DUP INV BND; do
    type="\"$ty\""
    bcftools view -i "INFO/SVTYPE==$type" $input > $outputDir/$tool.$ty.vcf
    if [[ $ty == "BND" ]]; then
        $addMateInfo $outputDir/$tool.$ty.vcf > $outputDir/$tool.$ty.vcf.2
        mv $outputDir/$tool.$ty.vcf.2 $outputDir/$tool.$ty.vcf
        awk '$1~/^#/' $outputDir/$tool.$ty.vcf > $outputDir/$tool.ITX.vcf
        cp $outputDir/$tool.ITX.vcf $outputDir/$tool.CTX.vcf
        awk -v FS="\t" -v OFS="\t" -v dir="$outputDir/" '$1!~/^#/ {split($8,info,";"); split(info[1],mateChr,"="); chr=mateChr[2]; split(info[2],matePos,"="); pos=matePos[2];
        if ($1==chr && $2<pos) {print $0 >> dir"$tool.ITX.vcf"} else if ($1>chr) {print $0 >> dir"$tool.CTX.vcf"}}' $outputDir/$tool.$ty.vcf
        
        rm $outputDir/$tool.$ty.vcf
        vcf-sort -c $outputDir/$tool.ITX.vcf > $outputDir/$tool.ITX.vcf.2
        mv $outputDir/$tool.ITX.vcf.2 $outputDir/$tool.ITX.vcf
        vcf-sort -c $outputDir/$tool.CTX.vcf > $outputDir/$tool.CTX.vcf.2
        mv $outputDir/$tool.CTX.vcf.2 $outputDir/$tool.CTX.vcf
    fi
done

## simple and further filter
for ty in DUP DEL INV ITX CTX; do
    bcftools view -i '(FMT/GT="0/1" | FMT/GT="1/1") & QUAL>1' $outputDir/$tool.$ty.vcf \
    > $outputDir/$tool.$ty.simpleFilter.vcf
done

for ty in DUP DEL INV; do
    bcftools query -f '%CHROM\t%POS\t%INFO/END\n' $outputDir/$tool.$ty.simpleFilter.vcf \
    | bedtools intersect -a stdin -b $excludeRegion -v \
    | sort -k1V,1V -k2n,2n -k3n,3n \
    > $outputDir/$tool.$ty.furtherFilter.bed
done

source activate python2
for ty in ITX CTX; do
    bcftools query -f '%CHROM\t%POS\t%INFO/MATE_CHR\t%INFO/MATE_END\n' $outputDir/$tool.$ty.simpleFilter.vcf \
    | awk -v OFS="\t" '{print $1,$2-1,$2,$3,$4-1,$4}' \
    | pgltools formatbedpe \
    | pgltools intersect1D -stdInA -b $excludeRegion -v \
    | sort -k1V,1V -k2n,2n -k3n,3n -k4V,4V -k5n,5n -k6n,6n \
    > $outputDir/$tool.$ty.furtherFilter.pgl
done

#############################################################

finish=$(date)
finishTime=$(date -u +"%s")
diff=$(($finishTime-$startTime))
hour=$(($diff/3600))
diffInWord=`echo "$hour hours $((($diff-$hour*3600)/60)) minutes and $((($diff-$hour*3600)%60)) seconds elapsed"`
echo "Done: ${tool}_categorize, $diffInWord" >> $progressFile


