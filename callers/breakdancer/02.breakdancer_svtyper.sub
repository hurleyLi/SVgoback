#!/bin/bash

#PBS -N breakdancer_svtyper_sampleReplace
#PBS -l nodes=1:ppn=10
#PBS -l mem=80gb
#PBS -q analysis
#PBS -d /users/hl7/analysis/SV/sample/sampleReplace
#PBS -e /users/hl7/analysis/SV/sample/sampleReplace/log/breakdancer/breakdancer_svtyper.err
#PBS -o /users/hl7/analysis/SV/sample/sampleReplace/log/breakdancer/breakdancer_svtyper.out
#PBS -A proj-as0001

source activate python2

threads=12
sample=sampleReplace
rootDir=/users/hl7/analysis/SV
workingDir=$rootDir/sample/$sample
outputDir=$workingDir/callers/breakdancer
tempDir=$outputDir/temp/breakdancer_svtyper
outputFile=$outputDir/breakdancer.svtyper.vcf
site=$outputDir/breakdancer.vcf
inputDir=$rootDir/data
input=$inputDir/$sample.hgv.bam
progressFile=$workingDir/log/progress.txt

mkdir -p $tempDir
cd $outputDir

# check input
for file in $site $input; do
    if [[ ! -f $file ]]; then
        echo "File $file does not exist, exit"
        exit
    fi
done

##########################################################

ho=$(hostname)
start=$(date)
startTime=$(date -u +"%s")
echo "Running: breakdancer_svtyper.......... on $ho, from $start" >> $progressFile

############################################################

# split vcfBody by chr
awk '$1~/^#/' $site | cut -f 1-9 > $tempDir/vcfHeader
for chr in {1..22} X Y BND; do
    cp $tempDir/vcfHeader $tempDir/vcfSub.$chr
done

awk -v FS="\t" -v OFS="\t" -v tempDir="$tempDir/vcfSub" '$1!~/^#/ {if ($8!~/SVTYPE=CTX/) {print $0 >> tempDir"."$1} 
else {print $0 >> tempDir".BND"}}' $site

cmdFile=$tempDir/svtyperCMD
if [[ -f $cmdFile ]]; then rm $cmdFile; fi

for chr in BND {1..22} X Y; do
    file=$tempDir/vcfSub.$chr
    if [[ ! -f $file ]]; then
        echo "WARNING!!! vcf file $file does not exist"
    fi
    echo "svtyper -B $input -i $file > $tempDir/svtyper.$chr" >> $cmdFile
done

parallel -j $threads -a $cmdFile eval

cp $tempDir/svtyper.1 $outputFile
for chr in {2..22} X Y BND; do
    awk '$1!~/^#/' $tempDir/svtyper.$chr >> $outputFile
done

vcf-sort -c -p $threads $outputFile > $outputFile.2
mv $outputFile.2 $outputFile

#############################################################

finish=$(date)
finishTime=$(date -u +"%s")
diff=$(($finishTime-$startTime))
hour=$(($diff/3600))
diffInWord=`echo "$hour hours $((($diff-$hour*3600)/60)) minutes and $((($diff-$hour*3600)%60)) seconds elapsed"`
echo "Done: breakdancer_svtyper, $diffInWord" >> $progressFile








